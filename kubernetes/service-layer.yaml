apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: adminer
  name: adminer
spec:
  ports:
  - name: "8080"
    port: 8080
    targetPort: 8080
  selector:
    io.kompose.service: adminer
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    wacc-app: auth
  name: auth
spec:
  ports:
  - name: http
    port: 4000
    targetPort: 4000
  selector:
    wacc-app: auth
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: file-uploader
  name: file-uploader
spec:
  ports:
  - name: "3500"
    port: 3500
    targetPort: 3500
  selector:
    io.kompose.service: file-uploader
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: front-end
  name: front-end
spec:
  ports:
  - name: "3000"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: front-end
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: fsm
  name: fsm
spec:
  ports:
  - name: "4500"
    port: 4500
    targetPort: 4500
  selector:
    io.kompose.service: fsm
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: portainer
  name: portainer
spec:
  ports:
  - name: "portainer"
    port: 9000
    targetPort: 9000
  selector:
    io.kompose.service: portainer
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: socket-gateway
  name: socket-gateway
spec:
  ports:
  - name: "5000"
    port: 5000
    targetPort: 5000
  selector:
    io.kompose.service: socket-gateway
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: adminer
  name: adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: adminer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/docker_network: "true"
        io.kompose.service: adminer
    spec:
      containers:
      - image: adminer
        imagePullPolicy: ""
        name: adminer
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    wacc-app: auth
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      wacc-app: auth
  strategy: {}
  template:
    metadata:
      labels:
        wacc-app: auth
    spec:
      containers:
      - args:
        - ./wait-for-it.sh
        - postgresdb:5432/auth_db
        - --
        - python
        - ./app.py
        env:
        - name: DATABASE_HOST
          value: postgresdb
        - name: IN_CONTAINER_FLAG
          value: "1"
        image: diarmuidk/wacc:auth-service
        imagePullPolicy: ""
        name: auth
        ports:
        - containerPort: 4000
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: file-uploader
  name: file-uploader
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: file-uploader
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/docker_network: "true"
        io.kompose.service: file-uploader
    spec:
      containers:
      - args:
        - ./wait-for-it.sh
        - rabbitmq:5672
        - --
        - python
        - ./app.py
        env:
        - name: IN_CONTAINER_FLAG
          value: "1"
        image: diarmuidk/wacc:file-uploader
        imagePullPolicy: Always
        name: file-uploader
        ports:
        - containerPort: 3500
        resources: {}
      imagePullSecrets:
        - name: regcred

      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: front-end
  name: front-end
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: front-end
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/docker_network: "true"
        io.kompose.service: front-end
    spec:
      containers:
      - image: diarmuidk/wacc:front-end
        imagePullPolicy: Always
        name: front-end
        ports:
        - containerPort: 80
        resources: {}
        stdin: true
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: fsm
  name: fsm
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: fsm
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/docker_network: "true"
        io.kompose.service: fsm
    spec:
      containers:
      - args:
        - ./wait-for-it.sh
        - rabbitmq:5672
        - --
        - python
        - ./views.py
        env:
        - name: IN_CONTAINER_FLAG
          value: "1"
        image: diarmuidk/wacc:fsm
        imagePullPolicy: Always
        name: fsm
        ports:
        - containerPort: 4500
        resources: {}
      imagePullSecrets:
        - name: regcred
      restartPolicy: Always
      serviceAccountName: ""
status: {}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: portainer-crb-clusteradmin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: portainer-sa-clusteradmin
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: portainer
  name: portainer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: portainer
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/docker_network: "true"
        io.kompose.service: portainer
    spec:
      serviceAccountName: portainer-sa-clusteradmin
      containers:
      - image: portainerci/portainer:develop
        imagePullPolicy: ""
        name: portainer
        ports:
        - containerPort: 9000
        resources: {}
      restartPolicy: Always
      volumes: null
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: socket-gateway
  name: socket-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: socket-gateway
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.network/docker_network: "true"
        io.kompose.service: socket-gateway
    spec:
      containers:
      - args:
        - python
        - ./gateway.py
        env:
        - name: IN_CONTAINER_FLAG
          value: "1"
        image: diarmuidk/wacc:socket-gateway
        imagePullPolicy: Always
        name: socket-gateway
        ports:
        - containerPort: 5000
        resources: {}
      imagePullSecrets:
        - name: regcred

      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}
